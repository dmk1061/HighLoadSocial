version: '3.8'

services:
  nginx:
    image: nginx:1.21
    container_name: nginx
    restart: on-failure
    volumes:
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '80:80'
      - '8080:8080'
    networks:
      - pg-network

  dialog-service-1:
    container_name: dialog-service-1
    build:
      context: ./DialogService
    environment:
      - CONTAINER_NAME=dialog-service-1
    depends_on:
      - nginx
      - master1
      - slave1
      - slave2
      - prometheus
    restart: unless-stopped
    ports:
      - 8085:8081
    networks:
      - pg-network

  dialog-service-2:
    container_name: dialog-service-2
    build:
      context: ./DialogService
    environment:
      - CONTAINER_NAME=dialog-service-2
    depends_on:
      - nginx
      - master1
      - slave1
      - slave2
      - dialog-service-1
      - prometheus
    restart: unless-stopped
    ports:
      - 8086:8081
    networks:
      - pg-network

  master1:
    build:
      context: .
      dockerfile: ./pg/master1/Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      AUTH_METHOD: trust  # Change this value to 'password' for password authentication
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\n host replication all 0.0.0.0/0 trust"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
    ports:
      - "5433:5432"
    networks:
      - pg-network
    volumes:
      - master1-data:/var/lib/postgresql/data
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
    restart: unless-stopped

  slave1:
    build:
      context: .
      dockerfile: ./pg/slave1/Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      AUTH_METHOD: trust  # Change this value to 'password' for password authentication
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot1 --host=master1 --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    ports:
      - "15432:5432"
    networks:
      - pg-network
    volumes:
      - slave1-data:/var/lib/postgresql/data
    #     - ./postgresql.conf:/etc/postgresql/postgresql.conf # Mount the custom postgresql.conf file
    restart: unless-stopped
    depends_on:
      - master1
  slave2:
    build:
      context: .
      dockerfile: ./pg/slave2/Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      AUTH_METHOD: trust  # Change this value to 'password' for password authentication
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot2 --host=master1 --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    ports:
      - "25432:5432"
    networks:
      - pg-network
    volumes:
      - slave2-data:/var/lib/postgresql/data
    #     - ./postgresql.conf:/etc/postgresql/postgresql.conf # Mount the custom postgresql.conf file
    restart: unless-stopped
    depends_on:
      - master1

  haproxy-pg:
    image: haproxy:3.0-dev
    container_name: haproxy-pg
    depends_on:
      - slave1
      - slave2
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "5000:5432"
    networks:
      - pg-network
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    network_mode: host
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

networks:
  pg-network:
    driver: bridge

volumes:
  master1-data:
  slave1-data:
  slave2-data: